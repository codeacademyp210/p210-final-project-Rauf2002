<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BestHospital" xml:space="preserve">
    <value>BEST HOSPITAL IN THE TOWN</value>
  </data>
  <data name="BookAppointment" xml:space="preserve">
    <value>BOOK APPOINTMENT</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>CONTACT</value>
  </data>
  <data name="ContactDetails" xml:space="preserve">
    <value>Contact Details</value>
  </data>
  <data name="Departments" xml:space="preserve">
    <value>DEPARTMENTS</value>
  </data>
  <data name="Doctors" xml:space="preserve">
    <value>DOCTORS</value>
  </data>
  <data name="Fast" xml:space="preserve">
    <value>Fast as Lightning</value>
  </data>
  <data name="Gallery" xml:space="preserve">
    <value>GALLERY</value>
  </data>
  <data name="Hygiene" xml:space="preserve">
    <value>Hygiene and Careful</value>
  </data>
  <data name="LatestPosts" xml:space="preserve">
    <value>Latest Posts</value>
  </data>
  <data name="OurDepartments" xml:space="preserve">
    <value>OUR DEPARTMTENTS</value>
  </data>
  <data name="OurDoctors" xml:space="preserve">
    <value>OUR DOCTORS</value>
  </data>
  <data name="OurPhilosophy" xml:space="preserve">
    <value>OUR PHILOSOPHY</value>
  </data>
  <data name="PatientName" xml:space="preserve">
    <value>Patient Name</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PowerfulDevices" xml:space="preserve">
    <value>Powerful Devices</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read More</value>
  </data>
  <data name="SelectDepartment" xml:space="preserve">
    <value>Select Department</value>
  </data>
  <data name="SelectDoctor" xml:space="preserve">
    <value>Select Doctor</value>
  </data>
  <data name="SelectTime" xml:space="preserve">
    <value>Choose Date</value>
  </data>
  <data name="Specialized" xml:space="preserve">
    <value>Our doctors are specialized in their field and have more than 10 years of experiences.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="test1" xml:space="preserve">
    <value>The doctors and nurses and aides were super duper helpful. I really really appreciate all your kindness and good care you have provide me with. Thank you so much!</value>
  </data>
  <data name="Testimonials" xml:space="preserve">
    <value>Testimonials</value>
  </data>
  <data name="WhenItComes" xml:space="preserve">
    <value>When It Comes to Health Care</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DoctorSchedule" xml:space="preserve">
    <value>Doctor Schedule</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="GetInTouch" xml:space="preserve">
    <value>Get in touch</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ViewProfile" xml:space="preserve">
    <value>View Profile</value>
  </data>
  <data name="Wheaties" xml:space="preserve">
    <value>Have you tried Wheaties? They’re whole wheat with all of the bran.
                        Won’t
                        you try Wheaties? For wheat is the best food of man. They’re crispy and crunchy the whole
                        year
                        through, The kiddies never tire of them and neither will you. So just try Wheaties, the
                        best
                        breakfast food in the land!</value>
  </data>
  <data name="NoAppointment" xml:space="preserve">
    <value>This Doctor Has No Appointment</value>
  </data>
  <data name="ph1" xml:space="preserve">
    <value>This is the subtitle for the heading</value>
  </data>
  <data name="ph2" xml:space="preserve">
    <value>Patients have an important role to play at each stage of their care and the five safety tips will serve to encourage them to be more involved in their health care.</value>
  </data>
  <data name="ph3" xml:space="preserve">
    <value>Patients can do a lot of small things to make their health-care experience as safe as possible.</value>
  </data>
  <data name="ph4" xml:space="preserve">
    <value>Hospitals are places of recovery and healing but there are also safety risks for patients, such as infections, falls and medication errors that can happen despite our best efforts.</value>
  </data>
</root>